# Copyright (C) 2018  Björnborg Nguyen
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

FROM alpine:edge AS builder

MAINTAINER Björnborg Nguyen "bjornborg.nguyen@chalmers.se"
RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories

WORKDIR /tmp

ADD . /tmp/sources

RUN apk update && \
   apk --no-cache add \
       ca-certificates \
       bash \
       cmake \
       g++ \
       git \
       make \
       upx \
       ccache \
       gfortran \
       openblas-dev \
       icu \
       opencv-dev \
       opencv-libs \
       libtbb-dev \
       libtbb \
       clang-dev \
       build-base \
       linux-headers \
       opencv

RUN git clone https://github.com/opencv/opencv.git && \
    cd opencv && checkout 3.2.0 && \
    git clone https://github.com/opencv/opencv_contrib.git && \
    cd ../opencv_contrib && checkout 3.2.0 && cd .. &&\
    mkdir -p opencv/build && \
    cd opencv/build && \
    cmake -D CMAKE_FIND_LIBRARY_SUFFIXES=.a -D BUILD_SHARED_LIBS=OFF -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_opencv_gpu=OFF -D WITH_CUDA=OFF -D WITH_TBB=OFF -D WITH_OPENGL=ON -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules .. && \
    make -j "$(getconf _NPROCESSORS_ONLN)" && \
    make install

RUN git clone https://github.com/tiny-dnn/tiny-dnn.git && \
  mkdir -p tiny-dnn/build && \
  cp sources/config.h tiny-dnn/tiny_dnn/config.h && \
  cd tiny-dnn/build && \
  cmake .. && \
  make install

RUN git clone https://github.com/eigenteam/eigen-git-mirror.git && \
   mkdir -p eigen-git-mirror/build && \
   cd eigen-git-mirror/build && \
   cmake .. && \
   make install

RUN cd sources && \
   rm -rf build && \
   mkdir build && \
   cd build && \
   cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/tmp/detectcone-dest .. && \
   make && make install && upx -9 /tmp/detectcone-dest/bin/detectcone

# # # Part to deploy beaglebone.
FROM alpine:edge
MAINTAINER Björnborg Nguyen "bjornborg.nguyen@chalmers.se"

WORKDIR /usr/bin
COPY --from=builder /tmp/detectcone-dest/bin/detectcone .
COPY --from=builder /usr/local/include/ /usr/include/
COPY --from=builder /usr/local/lib/ /usr/lib/
COPY --from=builder /usr/lib/ /usr/lib/
CMD ["/usr/bin/detectcone"]